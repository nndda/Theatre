name: Build documentation

on:
  push:
    branches:
      - docs
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - run: pip install -r requirements.txt
      - run: mkdocs gh-deploy --force

  optimize:
    runs-on: ubuntu-latest
    needs: 'deploy'

    steps:
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: actions/checkout@v4
        with:
          ref: 'gh-pages'

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install optimization dependencies
        run: npm i -g html-minifier clean-css-cli

      - name: Minify CSS
        run: find ./assets/stylesheets -name "*.css" ! -name "*.min.css" -type f -exec cleancss -o {} {} \;

      - name: Minify HTML
        run: find ./ -name "*.html" -type f -exec html-minifier --case-sensitive --conservative-collapse --decode-entities --remove-comments {} -o {} \;

      - name: Update optimized assets
        run: |
          git add .
          git commit -m "Optimize assets"
          git push
